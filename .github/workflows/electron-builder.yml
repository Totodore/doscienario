name: Electron builder

on:
  push:
    tags:
      - v*
  
jobs:
  Windows:
    runs-on: windows-latest
    steps:
    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - uses: actions/setup-node@master
      with:
        node-version: 14.13
    - name: install node tools
      run: npm install -g electron electron-builder typescript
    - uses: actions/checkout@v2
      with: 
        repository: totodore/build-doscienario
        token: ${{ secrets.CR_PAT }}
        submodules: recursive
    - name: Build Angular app
      run:
        ./build.ps1;
        npm install;
        tsc -b tsconfig.json;
        electron-builder build -w --publish=never;
        ls ./build;
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows_${{ steps.branch_name.outputs.SOURCE_TAG }}
        path: ./build/*.exe
        retention-days: 1
  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - uses: actions/setup-node@master
        with:
          node-version: 14.13
      - name: install node tools
        run: npm install -g electron electron-builder typescript
      - uses: actions/checkout@v2
        with: 
          repository: totodore/build-doscienario
          token: ${{ secrets.CR_PAT }}
          submodules: recursive
      - name: Build Angular app
        run: 
          ./build.bash;
          npm install;
          tsc -b tsconfig.json;
          electron-builder build -l --publish=never;
          ls ./build;
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux_${{ steps.branch_name.outputs.SOURCE_TAG }}
          path: ./build/*.AppImage
          retention-days: 1
  #Release Upload
  CreateRelease:
    runs-on: ubuntu-latest
    needs:
      - Linux
      - Windows
    steps:
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows_${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux_${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          files: |
            *.AppImage
            *.exe